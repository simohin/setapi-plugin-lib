/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}
group = 'ru.simohin'
version = '0.0.1'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        url "https://artifactory.setmachine.ru:8443/repository/set10-api-public"
    }
}

def setApiVersion = '0.0.44'
def jacksonVersion = '2.15.3'
def lombokVersion = '1.18.30'
def apacheHttpComponentsVersion = '4.5.13'
dependencies {
    api "ru.crystals.api:set10pos-api:$setApiVersion"

    implementation "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.fasterxml.jackson.module:jackson-module-jaxb-annotations:$jacksonVersion"
    implementation "org.apache.httpcomponents:httpclient:$apacheHttpComponentsVersion"
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
